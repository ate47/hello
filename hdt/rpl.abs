#include "hdt.abs"

enum DictionarySectionType : byte {
    TYPE_INDEX_RPL_INT_DELTA = 3,
    TYPE_INDEX_RPL_INT_LOG = 4
}

RPLDictionary : Dictionary{ci.format = "<http://purl.org/HDT/hdt#dictionaryRpl>"} {
    ControlInfo ci;
    DictionarySection R;
    DictionarySection P;
    LiteralSections L;
}

IntSectionDelta : DictionarySection{header.type = TYPE_INDEX_RPL_INT_DELTA} {
    struct {
        vlong numstrings;
        vlong bytes;
        bytes blocksize;
    } header;
    crc8 headerCrc;
    Sequence blocks;
    IntSectionDataChunkDelta<header.blocksize>[] chunks;
    crc32 chunksCrc;
}

IntSectionDataChunkDelta<blocksize> {
    vlong firstStr;
    struct {
        vlong delta;
    }[blocksize - 1] others;
}

IntSectionLog: DictionarySection{header.type = TYPE_INDEX_RPL_INT_LOG} {
    struct {
        vlong numstrings;
        vlong bytes;
        bytes blocksize;
    } header;
    crc8 headerCrc;
    Sequence blocks;
    IntSectionDataChunkLog<header.blocksize>[] chunks;
    crc32 chunksCrc;
}

IntSectionDataChunkLog<blocksize> {
    vlong numbits;
    union {
        // log is used if numbits < 64; entries is used otherwise (big numbers >= 2^64)
        SequenceLog log{header.numbits = numbits, header.numentries = blocksize};
        struct{
            vlong entry;
        }[blocksize] entries;
    } data;
}

LiteralSections {
    int numTypes;
    int numLang;
    struct {
        vlong strLength;
        string str;
    }[] types;
    struct {
        vlong strLength;
        string str;
    }[] langs;
    
    DictionarySection[] langSections;
    DictionarySection noDatatypeSection;
}